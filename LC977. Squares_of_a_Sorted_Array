# LC977 Squares of a Sorted Array

# Sol 1 Two pointers
class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        ans = [0] * len(nums)
        left,right = 0,len(nums) - 1
        for i in range(len(nums) - 1,-1,-1):
            if nums[left]**2 > nums[right]**2:
                ans[i] = nums[left]**2
                left += 1
            else:
                ans[i] = nums[right]**2
                right -= 1
        return ans

# Sol 2
class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        return sorted(x**2 for x in nums)

# Sol 3
class Solution:
    def sortedSquares(self, nums: List[int]) -> List[int]:
        ans = [0] * len(nums)
        left,right = 0,len(nums) - 1
        for i in range(len(nums) - 1,-1,-1):
            if abs(nums[left]) > abs(nums[right]):
                ans[i] = nums[left]**2
                left += 1
            else:
                ans[i] = nums[right]**2
                right -= 1
        return ans
