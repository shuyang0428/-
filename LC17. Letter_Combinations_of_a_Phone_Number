# LC17 Letter Combinations of a Phone Number

# Sol
class Solution:
    def __init__(self):
        self.letter_map = ['','','abc','def','ghi','jkl','mno','pqrs','tuv','wxyz']
        self.res = []
        self.s = ''
        
    def letterCombinations(self, digits: str) -> List[str]:
        if len(digits) == 0:
            return self.res
        self.backtracking(digits,0)
        return self.res
        
    def backtracking(self,digits,idx):
        if idx == len(digits):
            self.res.append(self.s)
            return
        digit = int(digits[idx])
        letters = self.letter_map[digit]
        for i in range(len(letters)):
            self.s += letters[i]
            self.backtracking(digits,idx + 1)
            self.s = self.s[:-1]
