# LC209 Minmum Size Subarray Sum

# Sliding Window
class Solution:
    def minSubArrayLen(self, target: int, nums: List[int]) -> int:
        n = len(nums)
        ans = float("INF")
        left,right = 0,0
        curr = 0
        while right < n:
            curr += nums[right]
            while curr >= target:
                ans = min(ans,right - left + 1)
                curr -= nums[left]
                left += 1
            right += 1
        return ans if ans!=float("INF") else 0
