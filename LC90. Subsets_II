# LC90 Subsets II

# Sol
class Solution:
    def backtracking(self,nums,startIndex,path,res):
        res.append(path[:])
        if startIndex == len(nums):
            return 
        for i in range(startIndex,len(nums)):
            if i > startIndex and nums[i] == nums[i-1]:
                continue
            path.append(nums[i])
            self.backtracking(nums,i+1,path,res)
            path.pop()

    def subsetsWithDup(self, nums: List[int]) -> List[List[int]]:
        nums.sort()
        res = []
        self.backtracking(nums,0,[],res)
        return res
