# LC24 Swap Node in Pairs

# Sol 1 Recurison
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        first = head
        second = head.next

        first.next = self.swapPairs(head.next.next)
        second.next = first

        return second

# Sol 2 Iteration
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head or not head.next:
            return head
        dummy = ListNode(-1)
        dummy.next = head
        prev = dummy

        while head and head.next:
            first = head
            second = head.next

            prev.next = second
            second.next,first.next = first,second.next

            prev = first
            head = first.next
        return dummy.next 

# Sol 3
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        dummy = ListNode(None)
        dummy.next = head
        curr = dummy

        while curr.next and curr.next.next:
            temp = curr.next
            temp1 = curr.next.next.next

            curr.next = curr.next.next
            curr.next.next = temp
            temp.next = temp1
            curr = curr.next.next
        return dummy.next
