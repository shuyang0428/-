# LC 96 Unique Binary Search Trees

# Sol 1 DP
class Solution:
    def numTrees(self, n: int) -> int:
        dp = [0] * (n + 1)
        dp[0] = 1

        for i in range(1,n+1):
            for j in range(1,i+1):
                dp[i] += dp[j-1]*dp[i-j]

        return dp[n]

# Sol 2 Math
class Solution:
    def numTrees(self, n: int) -> int:
        res = 1
        for i in range(n):
            res *= 2*(2*i+1)/(i+2)

        return int(res)
