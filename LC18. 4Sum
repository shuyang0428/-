# LC18 4Sum
class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        nums.sort()
        ans = []
        n = len(nums)

        for i in range(n):
            if nums[i] > 0 and nums[i] > target:
                break
            if i > 0 and nums[i] == nums[i-1]:
                continue
            
            for j in range(i+1,n):
                if nums[j] > 0 and nums[i] + nums[j] > target:
                    break
                if j > i+1 and nums[j] == nums[j-1]:
                    continue
                
                remain = target - nums[i] - nums[j]
                left,right = j+1,n-1
                while left<right:
                    if nums[left] + nums[right] > remain:
                        right -= 1
                    elif nums[left] + nums[right] < remain:
                        left += 1
                    else:
                        ans.append([nums[i],nums[j],nums[left],nums[right]]) 
                        while left<right and nums[left] == nums[left+1]:
                            left += 1
                        while left<right and nums[right] == nums[right-1]:
                            right -= 1
                        left += 1
                        right -= 1
        return ans
