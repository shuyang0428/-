# LC438 Find All Anagrams in a String

# Sol 1
class Solution:
    def findAnagrams(self, s: str, p: str) -> List[int]:
        d = Counter(p)
        n = len(p)
        ans = []
        if len(s) < n:
            return ans
        left = 0
        right = left + (n-1)

        while right<len(s):
            cut = s[left:right + 1]
            temp_dict = Counter(cut)
            if temp_dict == d:
                ans.append(left)
            left += 1
            right += 1
        return ans

# Sol 2
class Solution:
    def findAnagrams(self, s: str, p: str) -> List[int]:
        ns,np = len(s),len(p)
        ans = []
        if ns<np:
            return ans
        
        p_count = Counter(p)
        s_count = Counter()

        for i in range(ns):
            s_count[s[i]] += 1
            if i >= np:
                if s_count[s[i - np]] == 1:
                    del s_count[s[i - np]]
                else:
                    s_count[s[i - np]] -= 1
            if p_count == s_count:
                ans.append(i - np + 1)
        
        return ans
