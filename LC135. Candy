# LC 135 Candy

# Sol 1 Greedy 1
class Solution:
    def candy(self, ratings: List[int]) -> int:
        n = len(ratings)
        candy = [1] * n
        
        for i in range(1,n):
            if ratings[i] > ratings[i-1]:
                candy[i] = candy[i-1] + 1
        
        for i in range(n-2,-1,-1):
            if ratings[i] > ratings[i + 1]:
                candy[i] = max(candy[i],candy[i+1] + 1)
        
        return sum(candy)

# Sol 2 Greedy 2
class Solution:
    def candy(self, ratings: List[int]) -> int:
        n = len(ratings)
        candy = [1] * n
        
        for i in range(1,n):
            if ratings[i] > ratings[i-1]:
                candy[i] = candy[i-1] + 1
        
        for i in range(n-2,-1,-1):
            if ratings[i] > ratings[i + 1]:
                candy[i] = candy[i] if candy[i] > candy[i+1] else candy[i+1] + 1
        
        return sum(candy)
