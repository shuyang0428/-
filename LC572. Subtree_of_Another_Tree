# LC572 Subtree of Another Tree

# Sol 
class Solution:
    def isSubtree(self, root: Optional[TreeNode], subRoot: Optional[TreeNode]) -> bool:
        def dfs(node):
            if not node:
                return False
            elif is_identical(node,subRoot):
                return True
            return dfs(node.left) or dfs(node.right)
        def is_identical(node1,node2):
            if not node1 or not node2:
                return node1 is None and node2 is None
            return(node1.val == node2.val and is_identical(node1.left,node2.left) and is_identical(node1.right,node2.right))
        return dfs(root)
