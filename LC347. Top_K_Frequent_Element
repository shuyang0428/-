# LC347 Top K Frequent Elements

# Sol 1 Sorted dictionary
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        d = collections.Counter(nums)

        sorted_dict = sorted(d.items(),key = lambda x: x[1],reverse=True)
        ans = [0]*k
        print(sorted_dict)
        for i in range(k):
            ans[i] = sorted_dict[i][0]
        return ans

# Sol 2 heapq
import heapq
class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        d = collections.Counter(nums)

        que = []
        for key,freq in d.items():
            heapq.heappush(que,(freq,key))
            if len(que)>k:
                heapq.heappop(que)
        
        res = [0]*k
        for i in range(k-1,-1,-1):
            res[i] = heapq.heappop(que)[1]
        return res
